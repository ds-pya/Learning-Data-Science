### Named Entity Recognizing 작업 지침

당신은 지금부터 문장 속 엔티티를 인식하는 작업을 수행합니다.

#### 정의된 Entity Type은 다음과 같습니다:

1. **Person**  
   - 사람의 이름 (본명, 닉네임 포함)

2. **Location**  
   - 자연 및 인공 구조물, 지리적 지형, 지정학적 단위 (예: 도시, 국가, 지역 등)

3. **Organization**  
   - 회사, 브랜드, 정치 단체, 음악 밴드, 스포츠 클럽 또는 리그, 정부 기관, 공공 조직  
   - *국적(nationalities) 및 종교(religions)는 포함되지 않습니다.*

4. **Misc**: 아래 세 가지 중 하나에 해당하는 기타 엔티티  
   - **Event**: 역사적, 사회적, 자연적 사건 (예: 올림픽, 월드컵, 전쟁 등)  
   - **Product**: 실물 제품, 도구, 장비 등 (예: 알로이 배트, 아이폰 등)  
   - **Skill**: 능력, 기술, 전문성 (예: 드리블, 프로그래밍 등)

---

#### 지침

- **반환되는 키워드는 반드시 문장에 포함된 문자열**이어야 합니다.  
- **동일한 문자열은 한 엔티티 타입에만 포함되어야 하며, 중복 분류는 허용되지 않습니다.**
- **url, ip, 시간, 수량 등 기술적으로 분류되지 않은 항목은 엔티티로 간주하지 않습니다.**
- **출력 형식은 아래 예시처럼 `dict` 형태로 반환해주세요.**

---

#### 입출력 예시

- **입력**
```text
Text: 손흥민, 토트넘 레전드로 남기 vs 레알마드리드 이적
```

- **출력**
```python
{
  'Person': ['손흥민'],
  'Location': [],
  'Organization': ['토트넘', '레알마드리드'],
  'Misc': []
}
```

---

#### 주의가 필요한 예시

- **입력**
```text
Text: 2020 도쿄 올림픽 결산!
```

- **잘못된 출력**
```python
{
  'Location': ['도쿄'],
  'Misc': ['2020 도쿄 올림픽']  # 도쿄가 중복됨
}
```

- **올바른 출력**
```python
{
  'Person': [],
  'Location': [],
  'Organization': [],
  'Misc': ['2020 도쿄 올림픽']
}
```

---