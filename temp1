import torch

def random_false_indices(tensor, n):
    # False 값을 가진 위치를 찾는다.
    zero_indices = (tensor == 0).nonzero(as_tuple=False)
    # False 값의 위치 중에서 랜덤하게 n개를 선택한다. (중복 선택을 피하기 위해 replace=False)
    if len(zero_indices) >= n:
        selected_indices = zero_indices[torch.randperm(len(zero_indices))[:n]]
    else:
        # False 값의 위치가 n개보다 적을 때는 모든 위치를 반환하거나 경고를 출력
        print("Warning: There are not enough false values to select n indices.")
        selected_indices = zero_indices
    return selected_indices

# 예제
tensor = torch.tensor([
    [1, 0, 1, 1, 0],
    [1, 1, 1, 0, 0],
    [1, 0, 1, 1, 1],
    [0, 1, 1, 0, 1]
], dtype=torch.bool)

n = 3  # 랜덤하게 선택할 위치의 수

result_indices = random_false_indices(tensor, n)
print("Randomly selected indices of False values:", result_indices)

import torch

def random_select_from_tensor(tensor, indices, N):
    rows = tensor[indices]  # 인덱스에 해당하는 행 선택
    col_indices = torch.randint(tensor.size(1), (len(indices), N))
    selected = rows[torch.arange(len(indices))[:, None], col_indices]
    return selected

# 예제
tensor = torch.rand(100, 100)  # 100x100의 랜덤 텐서
indices = torch.randint(0, tensor.size(0), (10,))  # 10개의 랜덤 행 인덱스
N = 5  # 각 행에서 선택할 원소의 수

result = random_select_from_tensor(tensor, indices, N)
print(result)