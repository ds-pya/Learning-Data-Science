import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

class DataItem {
  final String type; // 'youtube', 'internet', 'other'
  final String title;
  final String? url;
  final String? packageName;
  final List<String> keywords;

  DataItem({
    required this.type,
    required this.title,
    this.url,
    this.packageName,
    required this.keywords,
  });
}

class DataListView extends StatelessWidget {
  final List<DataItem> items;

  const DataListView({super.key, required this.items});

  Widget _buildLeadingIcon(String? packageName) {
    // 실제 앱 아이콘은 가져오기 어려우므로 예시로 대체
    return CircleAvatar(
      backgroundImage: AssetImage('assets/icons/${packageName ?? "default"}.png'),
      radius: 24,
    );
  }

  Widget _buildUrlButton(String? url) {
    if (url == null) return SizedBox.shrink();
    return IconButton(
      icon: Icon(Icons.open_in_new),
      onPressed: () async {
        final uri = Uri.parse(url);
        if (await canLaunchUrl(uri)) {
          await launchUrl(uri);
        }
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return ListView.separated(
      padding: const EdgeInsets.all(12),
      itemCount: items.length,
      separatorBuilder: (_, __) => Divider(),
      itemBuilder: (context, index) {
        final item = items[index];
        return Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                _buildLeadingIcon(item.packageName),
                const SizedBox(width: 12),
                Expanded(
                  child: Text(
                    item.title,
                    maxLines: 2,
                    overflow: TextOverflow.ellipsis,
                    style: TextStyle(fontSize: 15),
                  ),
                ),
                _buildUrlButton(item.url),
              ],
            ),
            const SizedBox(height: 8),
            Wrap(
              spacing: 6,
              runSpacing: -8,
              children: item.keywords.map((kw) => Chip(label: Text('#$kw'))).toList(),
            )
          ],
        );
      },
    );
  }
}