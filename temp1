fun getPredictedLabels(scores: FloatArray): List<Pair<String, Float>> {
    val thresholded = outputs
        .mapIndexedNotNull { index, (label, threshold) ->
            val score = scores.getOrNull(index) ?: return@mapIndexedNotNull null
            if (score >= threshold) Pair(label, score) else null
        }

    val hasRealLabels = thresholded.any { it.first != "none" }

    return if (hasRealLabels) {
        thresholded.filterNot { it.first == "none" }
    } else {
        val noneScore = scores.getOrNull(outputs.indexOfFirst { it.first == "none" })
        if (noneScore != null && noneScore >= outputs.firstOrNull { it.first == "none" }?.second ?: Float.MAX_VALUE) {
            listOf(Pair("none", noneScore))
        } else {
            listOf(Pair("none", scores.getOrNull(outputs.indexOfFirst { it.first == "none" }) ?: 0f))
        }
    }
}