class DataItem {
  final String title;
  final String? url;
  final String? packageName;
  final List<String> keywords;
  final DateTime timestamp;

  DataItem({
    required this.title,
    this.url,
    this.packageName,
    required this.keywords,
    required this.timestamp,
  });
}

class DataCardListView extends StatelessWidget {
  final List<DataItem> items;

  const DataCardListView({super.key, required this.items});

  @override
  Widget build(BuildContext context) {
    return ListView.separated(
      padding: const EdgeInsets.all(12),
      itemCount: items.length,
      separatorBuilder: (_, __) => const SizedBox(height: 12),
      itemBuilder: (context, index) {
        final item = items[index];
        return Container(
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(12),
            boxShadow: [
              BoxShadow(
                color: Colors.black12,
                blurRadius: 6,
                offset: Offset(0, 3),
              ),
            ],
          ),
          padding: const EdgeInsets.all(12),
          child: Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // 왼쪽 아이콘
              CircleAvatar(
                backgroundImage: AssetImage('assets/icons/${item.packageName ?? "default"}.png'),
                radius: 24,
              ),
              const SizedBox(width: 12),
              // 중앙 텍스트 영역
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    // 상단: timestamp
                    Text(
                      _formatTimestamp(item.timestamp),
                      style: TextStyle(fontSize: 12, color: Colors.grey[600]),
                    ),
                    const SizedBox(height: 4),
                    // 중단: 텍스트
                    Text(
                      item.title,
                      style: TextStyle(fontSize: 15),
                      maxLines: 3,
                      overflow: TextOverflow.ellipsis,
                    ),
                    const SizedBox(height: 6),
                    // 하단: #tag
                    Wrap(
                      spacing: 6,
                      runSpacing: -4,
                      children: item.keywords.map((kw) {
                        return Text(
                          '#$kw',
                          style: TextStyle(fontSize: 12, color: Colors.grey[600]),
                        );
                      }).toList(),
                    ),
                  ],
                ),
              ),
              const SizedBox(width: 8),
              // 오른쪽 URL 버튼
              if (item.url != null)
                IconButton(
                  icon: Icon(Icons.open_in_new),
                  onPressed: () async {
                    final uri = Uri.parse(item.url!);
                    if (await canLaunchUrl(uri)) {
                      await launchUrl(uri);
                    }
                  },
                ),
            ],
          ),
        );
      },
    );
  }

  String _formatTimestamp(DateTime ts) {
    final now = DateTime.now();
    if (now.difference(ts).inDays == 0) {
      return '오늘 ${ts.hour}:${ts.minute.toString().padLeft(2, '0')}';
    }
    return '${ts.year}/${ts.month}/${ts.day} ${ts.hour}:${ts.minute.toString().padLeft(2, '0')}';
  }
}